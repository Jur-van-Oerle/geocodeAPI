public class CalculateGeoLocationAndUpdateRecord 
{
    @future(callout=true) public static void updateGeoLocation( Set<Id> allIds, String objectAPI_Name, String longitudeAPI_Name, String latitudeAPI_Name, String streetAPI_Name, String cityAPI_Name, String countryAPI_Name, String zipAPI_Name )
    {
        Set<Id> objectsToUpdate = new Set<Id>( );
        Integer i = 0;
        for ( Id idToUpdate : allIds )
        {
            if ( i > 9 || idToUpdate == null )
            {
               break;
            }
            objectsToUpdate.add( idToUpdate );
            ++i;
        }
        
        String placeHolder      = 'SELECT Id, {0}, {1}, {2}, {3}, {4}, {5} FROM {6}';
        List<String> fillers    = new List<String>{ longitudeAPI_Name, latitudeAPI_Name, streetAPI_Name, cityAPI_Name, countryAPI_Name, zipAPI_Name, objectAPI_Name };
        String soqlQuery        = String.format( placeHolder, fillers );
        
        soqlQuery               += ' WHERE Id IN : ' + 'objectsToUpdate';
        List<sObject> sobjList  = Database.query( soqlQuery );
        
        System.Debug( 'the actual objects to geoLocate: ' + sobjList );
        for ( sObject sObj : sobjList )
        {
            String street   = ( String )sObj.get( streetAPI_Name );
            String city     = ( String )sObj.get( cityAPI_Name );
            String country  = ( String )sObj.get( countryAPI_Name );
            String zip      = ( String )sObj.get( zipAPI_Name );
     
            String url      = Label.GeoApiEndpoint + 'json?address=' + sanitizeLocation( street, city, country, zip ) + '&key=' + Label.GeoApiKeyMassUpdate;
            googleMapsResponse res  = requestGeoLocation( url );
            
            if ( res.results.size( ) == 0 )
                continue;
            
            googleMapsResponse.location loc = res.results[0].geometry.location;
            
            sObj.put( longitudeAPI_Name, loc.lng );
            sObj.put( latitudeAPI_Name, loc.lat );
        }
        update sobjList;
    }
    
    private static googleMapsResponse requestGeoLocation( String url )
    {
        Http h              = new Http( );
        HttpRequest req     = new HTTPRequest( );
        req.setEndPoint( url );
        req.setMethod( 'GET' );
        
        HttpResponse res    = h.send( req );
        System.Debug( 'the response from Google: ' + res.getBody( ) );
        return ( googleMapsResponse )JSON.deserialize( res.getBody( ), googleMapsResponse.class );
    }
    
    private static String sanitizeLocation( String street, String city, String country, String zip )
    {
        String result               = '';
        List<String> addressFields  = new List<String>( );
        
        if ( street != null && street != '' )
        {
            addressFields.add( street );
        }
        
        if ( city != null && city != '' )
        {
            addressFields.add( city );
        }
        
        if ( country != null && country != '' )
        {
            addressFields.add( country );
        }
        
        if ( zip != null && zip != '' )
        {
            addressFields.add( zip );
        }
        
        for ( Integer i = 0; i < addressFields.size( ); ++i )
        {
            result += addressFields[i];
            if ( i != addressFields.size( ) - 1 )
            {
                result += ', ';
            }
        }
        return result.replace( ' ', '%20' );
    }
}
